$prwkle: #B9B2D9; // periwinkle
$lemonade: #EBA4BD; // lemonade
$lemonade_transp: #eba4bd3a; // lemonade
$hotpink: #F73879;
$hotpink_transp: #F7387970;
$salmon: #F6928E;
$light: #FEF9F9;
$light2: #fafafa;
$light3: #ececec;
$white: #FFFFFF;
$white_transp: #FFFFFF70;
$black: #000000;
$black_transp: #00000073;
$transp: #00000000;
$greylight: #707070;

.bg_prwkle { background-color: $prwkle; }
.bg_lemonade { background-color: $lemonade; }
.bg_lemonade_transp { background-color: $lemonade_transp; }
.bg_hotpink { background-color: $hotpink; }
.bg_hotpink_transp { background-color: $hotpink_transp; }
.bg_salmon { background-color: $salmon; }
.bg_light { background-color: $light; }
.bg_light2 { background-color: $light2; }
.bg_light3 { background-color: $light3; }
.bg_white { background-color: $white; }
.bg_white_transp { background-color: $white_transp; }
.bg_black { background-color: $black; }
.bg_black_transp { background-color: $black; }
.bg_transp { background-color: $transp; }
.bg_greylight { background-color: $greylight; }

.text_prwkle { color: $prwkle !important; }
.text_lemonade { color: $lemonade !important; }
.text_lemonade_transp { color: $lemonade_transp !important; }
.text_hotpink { color: $hotpink !important; }
.text_salmon { color: $salmon !important; }
.text_light { color: $light !important; }
.text_light2 { color: $light2 !important; }
.text_light3 { color: $light3 !important; }
.text_white { color: $white !important; }
.text_white_transp { color: $white_transp !important; }
.text_black { color: $black !important; }
.text_transp { color: $transp !important; }
.text_greylight { color: $greylight !important; }

.absolute { position: absolute; }
.d_block { display: block; }
.d_flex { display: flex; }
.d_inline { display: inline; }
.d_inline_block { display: inline-block; }
.d_none { display: none !important; }
.def_link { text-decoration: none; }
.def_btn {
  border: none; outline: none;
  background-color: $transp;
  padding: .6rem .8rem;
  cursor: pointer;
}
.pointer { cursor: pointer; }
.def_transition { transition: .3s all ease-in-out; }

// IMAGE
@mixin objectFit($format) {
  object-fit: $format;
}
// BTN
@mixin defaultBtn($color1, $color2, $radius: 0rem) {
  background-color: $color1;
  color: $color2;
  padding: .5rem 1rem;
  border-radius: $radius;
  font-weight: 500;
  border: .1rem solid $transp;
  text-decoration: none;
  transition: .3s all ease-in-out;
  @extend .pointer;
  &:hover {
    background-color: $transp;
    color: $color1;
    border: .1rem solid $color1;
  }
}

.align_items_center { @extend .d_flex; align-items: center !important; }
.justify_content_center { @extend .d_flex; justify-content: center !important; }

// FLEX
@mixin flexFlow($direct, $wrapping) {
  display: flex;
  flex-flow: $direct $wrapping;
}
@mixin flexProps($direct, $wrapping, $justify, $align) {
  display: flex;
  @include flexFlow($direct, $wrapping);
  justify-content: $justify;
  align-items: $align;
}
.hotpink_btn {
  @extend .primary_btn;
}
.primary_btn {
  @include defaultBtn($hotpink, $white, 5rem);
}
.salmon_btn {
  @include defaultBtn($salmon, $white, 5rem);
}
.prwkle_btn {
  @include defaultBtn($prwkle, $white, 5rem);
}
.lemonade_btn {
  @include defaultBtn($lemonade, $white, 5rem);
}
.black_btn {
  @include defaultBtn($black, $white, 5rem);
}
.white_btn {
  @include defaultBtn($white, $black, 5rem);
}

// WIDTH HEIGHT
@mixin minHeightWidth($height, $width: auto) {
  min-height: $height; min-width: $width;
}
@mixin heightWidth($height, $width: auto) {
  height: $height; width: $width;
}
@mixin maxHeightWidth($height, $width: auto) {
  max-height: $height; max-width: $width;
}